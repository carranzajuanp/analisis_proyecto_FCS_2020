kable_styling(kable(100*round(addmargins(prop.table(addmargins(table(datos_jp$sexo_aportante, datos_jp$nse),2),2),1),3), caption = "Sexo del principal aportante de ingresos del hogar (porcentajes por NSE)"), latex_options = "HOLD_position")
kable_styling(kable(addmargins(table(datos_jp$sexo_aportante, datos_jp$nse)), caption = "Sexo del principal aportante de ingresos del hogar (absolutos)"), latex_options = "HOLD_position")
datos$`Cuántas son menores de 14 años?`[
datos$`Cuántas son menores de 14 años?`=="o"
]<-0
kable_styling(kable(cantidad_de_integrantes, caption = "Media y mediana de la cantidad de integrantes del hogar según NSE"), latex_options = "HOLD_position")
kable_styling(kable(100*round(addmargins(prop.table(addmargins(table(datos$`Cuántas son menores de 14 años?`, datos$nse),2),2),1),3), caption = "Cantidad de menores de 14 años en el hogar (porcentajes por NSE)"), latex_options = "HOLD_position")
kable_styling(kable(addmargins(table(datos$`Cuántas son menores de 14 años?`, datos$nse)), caption = "Cantidad de menores de 14 años en el hogar según NSE (absolutos)"), latex_options = "HOLD_position")
kable_styling(kable(100*round(addmargins(prop.table(addmargins(table(datos$composicion, datos$nse),2),2),1),3), caption = "Composición de los hogares por tamaño y grupos de edades (porcentajes por NSE)"), latex_options = "HOLD_position")
kable_styling(kable(addmargins(table(datos$composicion, datos$nse)), caption = "Composición de los hogares por tamaño y grupos de edades según NSE (absolutos)"), latex_options = "HOLD_position")
kable_styling(kable(100*round(addmargins(prop.table(addmargins(table(datos$composicion_edad, datos$nse),2),2),1),3), caption = "Composición de los hogares por grupos de edades convivientes (porcentajes por NSE)"), latex_options = "HOLD_position")
kable_styling(kable(addmargins(table(datos$composicion_edad, datos$nse)), caption = "Composición de los hogares por grupos de edades convivientes según NSE (absolutos)"), latex_options = "HOLD_position")
datos$`Cantidad de ambientes`[datos$`Cantidad de ambientes`==0]<-NA
datos$personas_por_cuarto<-datos$`Cuántas personas viven en esa casa?`/
datos$`Cantidad de ambientes`
datos$hacinamiento_critico<-ifelse(datos$personas_por_cuarto>3, "más de tres personas por cuarto", "tres personas o menos por cuarto")
kable_styling(kable(100*round(
addmargins(
prop.table(
addmargins(
table(
datos$hacinamiento_critico, datos$nse),2),2),1),3), caption = "Hogares con hacinamiento crítico (porcentajes según NSE)"), latex_options = "HOLD_position")
kable_styling(kable(addmargins(table(datos$hacinamiento_critico, datos$nse)), caption = "Hogares con hacinamiento crítico (absolutos según NSE)"), latex_options = "HOLD_position")
kable_styling(kable(100*round(addmargins(prop.table(addmargins(table(datos$`La vivienda de su casa cuenta con [Cloacas]`, datos$nse),2),2),1),3), caption = "Servicio de cloacas en la vivienda según NSE (porcentajes por NSE)"), latex_options = "HOLD_position")
kable_styling(kable(addmargins(table(datos$`La vivienda de su casa cuenta con [Cloacas]`, datos$nse)), caption = "Servicio de cloacas en la vivienda según NSE (absolutos)"), latex_options = "HOLD_position")
kable_styling(kable(100*round(addmargins(prop.table(addmargins(table(datos$`La vivienda de su casa cuenta con [Gas Natural]`, datos$nse),2),2),1),3), caption = "Servicio de gas natural en la vivienda según NSE (porcentajes por NSE)"), latex_options = "HOLD_position")
kable_styling(kable(addmargins(table(datos$`La vivienda de su casa cuenta con [Gas Natural]`, datos$nse)), caption = "Servicio de gas natural en la vivienda según NSE (absolutos)"), latex_options = "HOLD_position")
notebook<-addmargins(
table(
datos$`5.1 En su hogar, tienen alguno de los dispositivos tecnológicos que voy a nombrarle? [Notebook]`,
datos$nse)
)[2,1:6]
pc<-addmargins(
table(
datos$`5.1 En su hogar, tienen alguno de los dispositivos tecnológicos que voy a nombrarle? [PC de escritorio]` ,
datos$nse)
)[2,1:6]
camara_fotos<-addmargins(
table(
datos$`5.1 En su hogar, tienen alguno de los dispositivos tecnológicos que voy a nombrarle? [Cámara de fotos]` ,
datos$nse)
)[2,1:6]
impresora<-addmargins(
table(
datos$`5.1 En su hogar, tienen alguno de los dispositivos tecnológicos que voy a nombrarle? [Impresora]` ,
datos$nse)
)[2,1:6]
notebook_CI<-addmargins(
table(
datos$`5.1 En su hogar, tienen alguno de los dispositivos tecnológicos que voy a nombrarle? [Notebook de Conectar Igualdad]` ,
datos$nse)
)[2,1:6]
smart_TV<-addmargins(
table(
datos$`5.1 En su hogar, tienen alguno de los dispositivos tecnológicos que voy a nombrarle? [Smart TV]` ,
datos$nse)
)[2,1:6]
tablet_ipad<-addmargins(
table(
datos$`5.1 En su hogar, tienen alguno de los dispositivos tecnológicos que voy a nombrarle? [Tablet / Ipad]` ,
datos$nse)
)[2,1:6]
v<-addmargins(table(datos$nse))
electronicos<-100*round(rbind(pc/v[1:6], notebook/v[1:6], notebook_CI/v[1:6],
tablet_ipad/v[1:6], smart_TV/v[1:6], impresora/v[1:6],
camara_fotos/v[1:6]),3)
row.names(electronicos)<-c("PC de escritorio", "Notebook", "Notebook conectar igualdad",
"Tablet / Ipad", "Smart TV", "Impresora", "Cámara de fotos")
kable_styling(kable(electronicos, caption = "Existencia de dispositivos electrónicos en el hogar, porcentaje según NSE"), latex_options = "HOLD_position")
datos$tel_celular<-
as.factor(
datos$`4.1 En su hogar cuentan con [Telefonía celular]`)
levels(datos$tel_celular)<-c("no", "si", NA)
datos$tel_fijo<-
as.factor(
datos$`4.1 En su hogar cuentan con [Telefonía fija]`)
levels(datos$tel_fijo)<-c("no", "si")
kable_styling(kable(100*round(addmargins(prop.table(
addmargins(table(
datos$tel_fijo, datos$nse),2),2),1),3), caption = "Disponibilidad de teléfono fijo en el hogar según zona geográfica (porcentajes según zona geográfica)"), latex_options = "HOLD_position")
kable_styling(kable(addmargins(table(datos$tel_fijo, datos$nse)
), caption = "Disponibilidad de teléfono fijo en el hogar según zona geográfica (absolutos)"), latex_options = "HOLD_position")
kable_styling(kable(100*round(addmargins(prop.table(
addmargins(table(
datos$tel_celular, datos$nse),2),2),1),3), caption = "Disponibilidad de teléfono celular  en el hogar según zona geográfica (porcentajes según zona geográfica)"), latex_options = "HOLD_position")
kable_styling(kable(addmargins(table(datos$tel_celular, datos$nse)
), caption = "Disponibilidad de teléfono celular según zona geográfica (absolutos)"), latex_options = "HOLD_position")
datos$tipo_conexion<-
as.factor(datos$`4.2 En su casa cuentan con conectividad a internet a través de`)
levels(datos$tipo_conexion)<-
c("cableada", "cableada", "cableada", "cableada", "ninguna", "solo datos",
"cableada", "cableada", "cableada", "cableada", "cableada", "solo datos",
"datos y wifi compartido", "solo wifi compartido")
kable_styling(kable(100*round(addmargins(prop.table(
addmargins(table(
datos$tipo_conexion, datos$nse),2),2),1),3), caption = "Tipo de conexión a Internet  en el hogar según NSE (porcentajes por NSE)"), latex_options = "HOLD_position")
kable_styling(kable(addmargins(table(datos$tipo_conexion, datos$nse)
), caption = "Tipo de conexión a Internet en el hogar según NSE (absolutos)"), latex_options = "HOLD_position")
datos$celulares_cada_mayor_13<-
as.numeric(datos$`5.2 Cuántos teléfonos celulares hay en su hogar?`)/
(as.numeric(datos$`Cuántas tienen entre 14 y 60 años?`)+
as.numeric(datos$`Cuántas tienen más de 60 años?`))
datos$celulares_cada_mayor_13[
datos$celulares_cada_mayor_13==Inf
]<-NA
celulares_por_persona<-datos %>%
group_by(nse) %>%
summarise(promedio=round(mean(celulares_cada_mayor_13, na.rm=TRUE),2))
names(celulares_por_persona)<-c("Nivel socioeconómico", "Celulares por persona")
kable_styling(kable(celulares_por_persona, caption = "Número promedio de celulares en el hogar por persona mayor de 13 años"), latex_options = "HOLD_position")
datos$lugar_atencion_salud<-as.factor(datos$`10.1 Cuando se presenta un problema de salud a Ud. o a un miembro de su familia, ¿acuden a?:`)
datos$hospital_publico<-str_extract(datos$lugar_atencion_salud,
"10.1.1 Hospital Público")
datos$hospital_privado<-str_extract(datos$lugar_atencion_salud,
"10.1.2 Hospital privado de mi Obra Social o Prepaga")
datos$dispensario<-str_extract(datos$lugar_atencion_salud,
"10.1.3 Dispensario barrial")
datos$medico_particular<-str_extract(datos$lugar_atencion_salud,
"10.1.4 Médico particular")
datos$otras<-str_extract(datos$lugar_atencion_salud,
"10.1.6 Otras")
datos$no_sabe<-str_extract(datos$lugar_atencion_salud,
"10.1.5 Ns / NC")
atencion1_abs<-addmargins(table(datos$hospital_publico, datos$nse),2)
atencion2_abs<-addmargins(table(datos$hospital_privado, datos$nse),2)
atencion3_abs<-addmargins(table(datos$dispensario, datos$nse),2)
atencion4_abs<-addmargins(table(datos$medico_particular, datos$nse),2)
atencion5_abs<-addmargins(table(datos$otras, datos$nse),2)
atencion6_abs<-addmargins(table(datos$no_sabe, datos$nse),2)
atencion_abs<-as.data.frame(rbind(atencion1_abs, atencion2_abs,
atencion3_abs, atencion4_abs,
atencion5_abs, atencion6_abs))
rownames(atencion_abs)<-c("Hospital Público", "Hospital privado de mi Obra Social o Prepaga",
"Dispensario barrial", "Médico particular", "Otras", "Ns / NC")
v<-table(datos$nse)
atencion1_rel<-100*round(atencion1_abs[1:5]/v[1:5],3)
atencion2_rel<-100*round(atencion2_abs[1:5]/v[1:5],3)
atencion3_rel<-100*round(atencion3_abs[1:5]/v[1:5],3)
atencion4_rel<-100*round(atencion4_abs[1:5]/v[1:5],3)
atencion5_rel<-100*round(atencion5_abs[1:5]/v[1:5],3)
atencion6_rel<-100*round(atencion6_abs[1:5]/v[1:5],3)
atencion_rel<-as.data.frame(rbind(atencion1_rel, atencion2_rel,
atencion3_rel, atencion4_rel,
atencion5_rel, atencion6_rel))
rownames(atencion_rel)<-c("Hospital Público", "Hospital privado de mi Obra Social o Prepaga",
"Dispensario barrial", "Médico particular", "Otras", "Ns / NC")
kable_styling(kable(atencion_rel, caption = "Lugar de atención ante problemas de salud (porcentajes por NSE"), latex_options = "HOLD_position")
kable_styling(kable(atencion_abs, caption = "Lugar de atención ante problemas de salud (absolutos por NSE"), latex_options = "HOLD_position")
datos$`10.2 Nos podría indicar a qué distancia aproximada de su casa (en cuadras) se ubica el centro de salud que utiliza?`<-as.factor(datos$`10.2 Nos podría indicar a qué distancia aproximada de su casa (en cuadras) se ubica el centro de salud que utiliza?`)
levels(datos$`10.2 Nos podría indicar a qué distancia aproximada de su casa (en cuadras) se ubica el centro de salud que utiliza?`)<-c("Entre 1 a 15 cuadras","Entre 15 y 40 cuadras", "Más de 40 cuadras")
kable_styling(kable(100*round(addmargins(prop.table(addmargins(table(datos$`10.2 Nos podría indicar a qué distancia aproximada de su casa (en cuadras) se ubica el centro de salud que utiliza?`, datos$nse),2),2),1),3), caption = "Distancia desde el domicilio hasta el centro de salud (porcentajes según NSE)"), latex_options = "HOLD_position")
kable_styling(kable(addmargins(table(datos$`10.2 Nos podría indicar a qué distancia aproximada de su casa (en cuadras) se ubica el centro de salud que utiliza?`, datos$nse)), caption = "Distancia desde el domicilio hasta el centro de salud según NSE (absolutos)"), latex_options = "HOLD_position")
datos$`10.3 Cuando necesita atención médica, Ud o su familia se dirigen a ese centro de salud:`<-as.factor(datos$`10.3 Cuando necesita atención médica, Ud o su familia se dirigen a ese centro de salud:`)
levels(datos$`10.3 Cuando necesita atención médica, Ud o su familia se dirigen a ese centro de salud:`)<-c("En transporte público con trasbordos (tomando más de un colectivo)", "En transporte público sin trasbordos", "En automóvil particular", "A pie", "En bicileta", "En motocicleta", "otros")
kable_styling(column_spec(kable(100*round(addmargins(prop.table(addmargins(table(datos$`10.3 Cuando necesita atención médica, Ud o su familia se dirigen a ese centro de salud:`, datos$nse),2),2),1),3), caption = "Medio de transporte para concurrir al centro de salud (porcentajes según NSE)"), 1, width="5cm"), latex_options = "HOLD_position")
kable_styling(column_spec(kable(addmargins(table(datos$`10.3 Cuando necesita atención médica, Ud o su familia se dirigen a ese centro de salud:`, datos$nse)), caption = "Medio de transporte para concurrir al centro de salud según NSE (absolutos)"), 1, width="5cm"), latex_options = "HOLD_position")
# ¿faltan las distancias de los otros niveles?
datos$`14.3 ¿Nos podría indicar a qué distancia aproximada (en cuadras) de su hogar se ubica el establecimiento? [Pre escolar]`<-as.factor(datos$`14.3 ¿Nos podría indicar a qué distancia aproximada (en cuadras) de su hogar se ubica el establecimiento? [Pre escolar]`)
levels(datos$`14.3 ¿Nos podría indicar a qué distancia aproximada (en cuadras) de su hogar se ubica el establecimiento? [Pre escolar]`)<-c("Entre 1 y 15 cuadras", "Entre 15 y 40 cuadras", "Más de 40 cuadras")
kable_styling(kable(100*round(addmargins(prop.table(addmargins(table(datos$`14.3 ¿Nos podría indicar a qué distancia aproximada (en cuadras) de su hogar se ubica el establecimiento? [Pre escolar]`, datos$nse),2),2),1),3), caption = "Distancia establecimiento preescolar (porcentajes según NSE)"), latex_options = "HOLD_position")
kable_styling(kable(addmargins(table(datos$`14.3 ¿Nos podría indicar a qué distancia aproximada (en cuadras) de su hogar se ubica el establecimiento? [Pre escolar]`, datos$nse)), caption = "Distancia establecimiento preescolar según NSE (absolutos)"), latex_options = "HOLD_position")
kable_styling(kable(100*round(addmargins(prop.table(addmargins(table(datos$`14. En su hogar hay integrantes cursando [Jardín de infantes]`, datos$nse),2),2),1),3), caption = "Integrantes cursando jardín de infantes (porcentajes según NSE)"), latex_options = "HOLD_position")
kable_styling(kable(addmargins(table(datos$`14. En su hogar hay integrantes cursando [Jardín de infantes]`, datos$nse)), caption = "Integrantes cursando jardín de infantes según NSE (absolutos)"), latex_options = "HOLD_position")
kable_styling(kable(100*round(addmargins(prop.table(addmargins(table(datos$`14. En su hogar hay integrantes cursando [Primario]`, datos$nse),2),2),1),3), caption = "Integrantes cursando primario (porcentajes según NSE)"), latex_options = "HOLD_position")
kable_styling(kable(addmargins(table(datos$`14. En su hogar hay integrantes cursando [Primario]`, datos$nse)), caption = "Integrantes cursando primario según NSE (absolutos)"), latex_options = "HOLD_position")
kable_styling(kable(100*round(addmargins(prop.table(addmargins(table(datos$`14. En su hogar hay integrantes cursando [Secundario]`, datos$nse),2),2),1),3), caption = "Integrantes cursando secundario (porcentajes según NSE)"), latex_options = "HOLD_position")
kable_styling(kable(addmargins(table(datos$`14. En su hogar hay integrantes cursando [Secundario]`, datos$nse)), caption = "Integrantes cursando secundario según NSE (absolutos)"), latex_options = "HOLD_position")
kable_styling(kable(100*round(addmargins(prop.table(addmargins(table(datos$`14. En su hogar hay integrantes cursando [Universitario o terciario]`, datos$nse),2),2),1),3), caption = "Integrantes cursando universitario o terciario (porcentajes según NSE)"), latex_options = "HOLD_position")
kable_styling(kable(addmargins(table(datos$`14. En su hogar hay integrantes cursando [Universitario o terciario]`, datos$nse)), caption = "Integrantes cursando universitario o terciario según NSE (absolutos)"), latex_options = "HOLD_position")
kable_styling(kable(100*round(addmargins(prop.table(addmargins(table(datos$ingreso, datos$nse),2),2),1),3), caption = "Ingresos del hogar según NSE (porcentajes por NSE)"), latex_options = "HOLD_position")
kable_styling(kable(addmargins(table(datos$ingreso, datos$nse)), caption = "Ingresos del hogar según NSE (absolutos)"), latex_options = "HOLD_position")
kable_styling(kable(fuente_de_ingresos_rel, caption = "Fuentes de ingresos del hogar (porcentajes de respuestas por NSE)"), latex_options = "HOLD_position")
fuente_de_ingresos_abs
write.csv(fuente_de_ingresos_abs, "fuente_ingresos.csv")
write.csv(fuente_de_ingresos_ppal_abs, "fuente_ingresos.csv")
table(datos$`7.3 ¿El trabajo de la persona que aporta el ingreso principal en el hogar, es de…? (leer opciones)`)
length(datos$`1.1 Edad`)
install.packages("sf")
table(datos$`Cantidad de grupos familiares que viven en esa casa`)
datos$`Cantidad de grupos familiares que viven en esa casa`)[
datos$`Cantidad de grupos familiares que viven en esa casa`==13]<-NA
datos$`Cantidad de grupos familiares que viven en esa casa`)[datos$`Cantidad de grupos familiares que viven en esa casa`==13]<-NA
datos$cantidad_hogares<-datos$`Cantidad de grupos familiares que viven en esa casa`
datos$`Cantidad de grupos familiares que viven en esa casa`[
table(datos$`Cantidad de grupos familiares que viven en esa casa`)
datos$`Cantidad de grupos familiares que viven en esa casa`[
datos$`Cantidad de grupos familiares que viven en esa casa`==13]<-NA
table(datos$`Cantidad de grupos familiares que viven en esa casa`)
addmargins(table(datos$`Cantidad de grupos familiares que viven en esa casa`))
load("datos.Rda")
datos$`Cantidad de grupos familiares que viven en esa casa`[
datos$`Cantidad de grupos familiares que viven en esa casa`==13]<-1
addmargins(table(datos$`Cantidad de grupos familiares que viven en esa casa`))
table(datos$`12.3 Voy a leerle algunas dificultades que podrían haber aparecido al momento de buscar atención médica, y le voy a pedir que me señale todas aquellas que hayan vivido en su núcleo familiar durante el año pasado:`)
library(stringr)
datos$dificultades_salud_2020_falta_tencion<-
str_extract(datos$`12.3 Voy a leerle algunas dificultades que podrían haber aparecido al momento de buscar atención médica, y le voy a pedir que me señale todas aquellas que hayan vivido en su núcleo familiar durante el año pasado:`,
"12.3.1 Dificultades para acceder a turnos médicos por escasez de atención")
table(datos$dificultades_salud_2020_falta_tencion)
datos$dificultades_salud_2020_falta_conectividad<-
str_extract(datos$`12.3 Voy a leerle algunas dificultades que podrían haber aparecido al momento de buscar atención médica, y le voy a pedir que me señale todas aquellas que hayan vivido en su núcleo familiar durante el año pasado:`,
"12.3.2 Dificultades para solicitar turnos de manera virtual por falta de conectividad")
datos$dificultades_salud_2020_falta_sistemas<-
str_extract(datos$`12.3 Voy a leerle algunas dificultades que podrían haber aparecido al momento de buscar atención médica, y le voy a pedir que me señale todas aquellas que hayan vivido en su núcleo familiar durante el año pasado:`,
"12.3.3 Dificultades para solicitar turnos de manera virtual por problemas en los sistemas")
datos$dificultades_salud_2020_pago_consultas<-
str_extract(datos$`12.3 Voy a leerle algunas dificultades que podrían haber aparecido al momento de buscar atención médica, y le voy a pedir que me señale todas aquellas que hayan vivido en su núcleo familiar durante el año pasado:`,
"12.3.4 Dificultades económicas para pagar consultas, medicamentos, análisis médicos, estudios y especialidades médicas")
datos$dificultades_salud_2020_otras<-
str_extract(datos$`12.3 Voy a leerle algunas dificultades que podrían haber aparecido al momento de buscar atención médica, y le voy a pedir que me señale todas aquellas que hayan vivido en su núcleo familiar durante el año pasado:`,
"12.3.7 Otras")
#######
v<-addmargins(table(datos$nse))
datos$nse<-as.factor(datos$`Nivel Socio Económico`)
datos$nse<-factor(datos$nse, levels=c("01. Alto", "02. Medio alto", "03.Medio",
"0.4 Medio Bajo", "0.5  Bajo"))
levels(datos$nse)<-c("Alto", "Medio alto", "Medio",
"Medio Bajo", "Bajo")
#######
v<-addmargins(table(datos$nse))
v
datos$dificultades_salud_2020_falta_atencion<-
str_extract(datos$`12.3 Voy a leerle algunas dificultades que podrían haber aparecido al momento de buscar atención médica, y le voy a pedir que me señale todas aquellas que hayan vivido en su núcleo familiar durante el año pasado:`,
"12.3.1 Dificultades para acceder a turnos médicos por escasez de atención")
datos$dificultades_salud_2020_falta_conectividad<-
str_extract(datos$`12.3 Voy a leerle algunas dificultades que podrían haber aparecido al momento de buscar atención médica, y le voy a pedir que me señale todas aquellas que hayan vivido en su núcleo familiar durante el año pasado:`,
"12.3.2 Dificultades para solicitar turnos de manera virtual por falta de conectividad")
datos$dificultades_salud_2020_falta_sistemas<-
str_extract(datos$`12.3 Voy a leerle algunas dificultades que podrían haber aparecido al momento de buscar atención médica, y le voy a pedir que me señale todas aquellas que hayan vivido en su núcleo familiar durante el año pasado:`,
"12.3.3 Dificultades para solicitar turnos de manera virtual por problemas en los sistemas")
datos$dificultades_salud_2020_pago_consultas<-
str_extract(datos$`12.3 Voy a leerle algunas dificultades que podrían haber aparecido al momento de buscar atención médica, y le voy a pedir que me señale todas aquellas que hayan vivido en su núcleo familiar durante el año pasado:`,
"12.3.4 Dificultades económicas para pagar consultas, medicamentos, análisis médicos, estudios y especialidades médicas")
datos$dificultades_salud_2020_posponer_intervenciones<-
str_extract(datos$`12.3 Voy a leerle algunas dificultades que podrían haber aparecido al momento de buscar atención médica, y le voy a pedir que me señale todas aquellas que hayan vivido en su núcleo familiar durante el año pasado:`,
"12.3.5 Posponer intervenciones quirúrgicas")
datos$dificultades_salud_2020_movilidad<-
str_extract(datos$`12.3 Voy a leerle algunas dificultades que podrían haber aparecido al momento de buscar atención médica, y le voy a pedir que me señale todas aquellas que hayan vivido en su núcleo familiar durante el año pasado:`,
"12.3.6 Dificultades para llegar a algún servicio de salud por las restricciones a la movilidad")
datos$dificultades_salud_2020_otras<-
str_extract(datos$`12.3 Voy a leerle algunas dificultades que podrían haber aparecido al momento de buscar atención médica, y le voy a pedir que me señale todas aquellas que hayan vivido en su núcleo familiar durante el año pasado:`,
"12.3.7 Otras")
dificultad1<-100*round(addmargins(table(datos$dificultades_salud_2020_falta_atencion, datos$nse), 2)[1:6]/v[1:6], 3)
dificultad2<-100*round(addmargins(table(datos$dificultades_salud_2020_falta_conectividad, datos$nse), 2)[1:6]/v[1:6],3)
dificultad3<-100*round(addmargins(table(datos$dificultades_salud_2020_falta_sistemas, datos$nse), 2)[1:6]/v[1:6],3)
dificultad4<-100*round(addmargins(table(datos$dificultades_salud_2020_pago_consultas, datos$nse), 2)[1:6]/v[1:6],3)
dificultad5<-100*round(addmargins(table(datos$dificultades_salud_2020_posponer_intervenciones, datos$nse), 2)[1:6]/v[1:6],3)
dificultad6<-100*round(addmargins(table(datos$dificultades_salud_2020_movilidad, datos$nse), 2)[1:6]/v[1:6],3)
dificultad7<-100*round(addmargins(table(datos$dificultades_salud_2020_otras, datos$nse), 2)[1:6]/v[1:6],3)
dificultades<-as.data.frame(rbind(dificultad1, dificultad2, dificultad3,
dificultad4,dificultad5,dificultad6,dificultad7))
rownames(dificultades)<-c("Acceder a turnos médicos por escasez de atención",
"Solicitar turnos por falta de conectividad",
"Solicitar turnos por problemas en los sistemas",
"Pagar prestaciones", "Posponer intervenciones quirúrgicas",
"Llegar al servicio de salud por restricciones a la movilidad", "Otras")
write.csv(
table(datos$`12.3 Voy a leerle algunas dificultades que podrían haber aparecido al momento de buscar atención médica, y le voy a pedir que me señale todas aquellas que hayan vivido en su núcleo familiar durante el año pasado:`),
"dificultades.csv")
table(datos$`5.1 En su hogar, tienen alguno de los dispositivos tecnológicos que voy a nombrarle? [Cámara de fotos]`)
library(sf)
barrios = st_read("barrios_cordoba.gpkg")
tabla = read.csv("clasificacion.csv", header = T, sep = ";")
library(dplyr)
tabla = rename(tabla, Nombre = nombre)
barrios = left_join(barrios, tabla, by = "Nombre")
barrios = st_transform(barrios, 4326)
barrios$categoria = ifelse(is.na(barrios$categoria)==T, "Sin clasificar", barrios$categoria)
barrios$categoria <- factor(barrios$categoria, levels = c("Alto", "Medio-alto","Medio", "Medio-bajo", "Bajo","Sin clasificar"))
library(osmdata)
bbox <- getbb("Municipio de Cordoba, Argentina", format_out = "sf_polygon")
vias_prim <- opq(bbox) %>%
add_osm_feature(key = "highway", value = "primary") %>%
osmdata_sf()
vias_prim = vias_prim$osm_lines
vias_sec <- opq(bbox) %>%
add_osm_feature(key = "highway", value = "secondary") %>%
osmdata_sf()
vias_sec = vias_sec$osm_lines
vias_autop <- opq(bbox) %>%
add_osm_feature(key = "highway", value = c("motorway","trunk")) %>%
osmdata_sf()
vias_autop = vias_autop$osm_lines
rio = opq(bbox) %>%
add_osm_feature(key = "waterway", value = "river") %>%
osmdata_sf()
rio = rio$osm_lines
calles = rbind(vias_prim[,c("geometry")], vias_sec[,c("geometry")])
library(tmap)
tmap_mode("plot")
pal = c("#2B83BA","#ABDDA4","#FFFFBF","#FDAE61","#E53E3E","#99A3A4")
mapa_pred <- tm_basemap(leaflet::providers$OpenStreetMap.Mapnik) +
tm_shape(barrios) +
tm_fill(col = c("categoria"), palette = pal) +
tm_borders(col = "#85929E", lwd = 0.1, alpha = 0.2) +
tm_layout(main.title= "Figura 1 - Clasificaci?n de barrios seg?n nivel socioecon?mico.",  main.title.position = c('right', 'center'), main.title.size = 1) +
tm_legend(position = c("left", "bottom"),
bg.color = "white",
bg.alpha=1,
width = .25, title.size = 1) +
tm_shape(vias_autop) + tm_lines(col = "black",lwd = 3)+
tm_shape(calles) + tm_lines(col = "black",lwd = 1)+
tm_shape(rio) + tm_lines(col = "#3498DB",lwd = 2) +
tm_compass(type = "4star", position=c("right", "top")) + tm_scale_bar()
tmap_save(mapa_pred, filename = "mapa_barrios.png")
library(sf)
barrios = st_read("barrios_cordoba.gpkg")
tabla = read.csv("clasificacion.csv", header = T, sep = ";")
library(dplyr)
tabla = rename(tabla, Nombre = nombre)
barrios = left_join(barrios, tabla, by = "Nombre")
barrios = st_transform(barrios, 4326)
barrios$categoria = ifelse(is.na(barrios$categoria)==T, "Sin clasificar", barrios$categoria)
barrios$categoria <- factor(barrios$categoria, levels = c("Alto", "Medio-alto","Medio", "Medio-bajo", "Bajo","Sin clasificar"))
library(osmdata)
bbox <- getbb("Municipio de Cordoba, Argentina", format_out = "sf_polygon")
vias_prim <- opq(bbox) %>%
add_osm_feature(key = "highway", value = "primary") %>%
osmdata_sf()
vias_prim = vias_prim$osm_lines
vias_sec <- opq(bbox) %>%
add_osm_feature(key = "highway", value = "secondary") %>%
osmdata_sf()
vias_sec = vias_sec$osm_lines
vias_autop <- opq(bbox) %>%
add_osm_feature(key = "highway", value = c("motorway","trunk")) %>%
osmdata_sf()
vias_autop = vias_autop$osm_lines
rio = opq(bbox) %>%
add_osm_feature(key = "waterway", value = "river") %>%
osmdata_sf()
rio = rio$osm_lines
calles = rbind(vias_prim[,c("geometry")], vias_sec[,c("geometry")])
library(tmap)
tmap_mode("plot")
pal = c("#2B83BA","#ABDDA4","#FFFFBF","#FDAE61","#E53E3E","#99A3A4")
mapa_pred <- tm_basemap(leaflet::providers$OpenStreetMap.Mapnik) +
tm_shape(barrios) +
tm_fill(col = c("categoria"), palette = pal) +
tm_borders(col = "#85929E", lwd = 0.1, alpha = 0.2) +
tm_layout(main.title= "Figura 1 - Clasificación de barrios según nivel socioeconómico.",
main.title.position = c('right', 'center'), main.title.size = 1, main.title.fontfamily = "serif") +
tm_legend(position = c("left", "bottom"),
bg.color = "white",
bg.alpha=1,
width = .25, title.size = 1) +
tm_shape(vias_autop) + tm_lines(col = "black",lwd = 3)+
tm_shape(calles) + tm_lines(col = "black",lwd = 1)+
tm_shape(rio) + tm_lines(col = "#3498DB",lwd = 2) +
tm_compass(type = "4star", position=c("right", "top")) + tm_scale_bar()
tmap_save(mapa_pred, filename = "mapa_barrios.png")
library(sf)
barrios = st_read("barrios_cordoba.gpkg")
tabla = read.csv("clasificacion.csv", header = T, sep = ";")
library(dplyr)
tabla = rename(tabla, Nombre = nombre)
barrios = left_join(barrios, tabla, by = "Nombre")
barrios = st_transform(barrios, 4326)
barrios$categoria = ifelse(is.na(barrios$categoria)==T, "Sin clasificar", barrios$categoria)
barrios$categoria <- factor(barrios$categoria, levels = c("Alto", "Medio-alto","Medio", "Medio-bajo", "Bajo","Sin clasificar"))
library(osmdata)
bbox <- getbb("Municipio de Cordoba, Argentina", format_out = "sf_polygon")
vias_prim <- opq(bbox) %>%
add_osm_feature(key = "highway", value = "primary") %>%
osmdata_sf()
vias_prim = vias_prim$osm_lines
vias_sec <- opq(bbox) %>%
add_osm_feature(key = "highway", value = "secondary") %>%
osmdata_sf()
vias_sec = vias_sec$osm_lines
vias_autop <- opq(bbox) %>%
add_osm_feature(key = "highway", value = c("motorway","trunk")) %>%
osmdata_sf()
vias_autop = vias_autop$osm_lines
rio = opq(bbox) %>%
add_osm_feature(key = "waterway", value = "river") %>%
osmdata_sf()
rio = rio$osm_lines
calles = rbind(vias_prim[,c("geometry")], vias_sec[,c("geometry")])
library(tmap)
tmap_mode("plot")
pal = c("#2B83BA","#ABDDA4","#FFFFBF","#FDAE61","#E53E3E","#99A3A4")
mapa_pred <- tm_basemap(leaflet::providers$OpenStreetMap.Mapnik) +
tm_shape(barrios) +
tm_fill(col = c("categoria"), palette = pal) +
tm_borders(col = "#85929E", lwd = 0.1, alpha = 0.2) +
tm_layout(main.title= "Figura 1 - Clasificación de barrios según nivel socioeconómico.",
main.title.position = c('left', 'center'), main.title.size = 1, main.title.fontfamily = "serif") +
tm_legend(position = c("left", "bottom"),
bg.color = "white",
bg.alpha=1,
width = .25, title.size = 1) +
tm_shape(vias_autop) + tm_lines(col = "black",lwd = 3)+
tm_shape(calles) + tm_lines(col = "black",lwd = 1)+
tm_shape(rio) + tm_lines(col = "#3498DB",lwd = 2) +
tm_compass(type = "4star", position=c("right", "top")) + tm_scale_bar()
tmap_save(mapa_pred, filename = "mapa_barrios.png")
library(kableExtra)
library(tidyr)
library(dplyr)
library(ggplot2)
library(stringr)
knitr::opts_chunk$set(echo = FALSE)
load("datos.Rda")
names(datos)
library(sf)
barrios = st_read("barrios_cordoba.gpkg")
tabla = read.csv("clasificacion.csv", header = T, sep = ";")
tabla = tabla[,1:2]
library(dplyr)
tabla = rename(tabla, Nombre = nombre)
barrios = left_join(barrios, tabla, by = "Nombre")
barrios = st_transform(barrios, 4326)
barrios$categoria = ifelse(is.na(barrios$categoria)==T, "Sin clasificar", barrios$categoria)
barrios$categoria <- factor(barrios$categoria, levels = c("Alto", "Medio-alto","Medio", "Medio-bajo", "Bajo","Sin clasificar"))
library(osmdata)
bbox <- getbb("Municipio de Cordoba, Argentina", format_out = "sf_polygon")
vias_prim <- opq(bbox) %>%
add_osm_feature(key = "highway", value = "primary") %>%
osmdata_sf()
vias_prim = vias_prim$osm_lines
vias_sec <- opq(bbox) %>%
add_osm_feature(key = "highway", value = "secondary") %>%
osmdata_sf()
vias_sec = vias_sec$osm_lines
vias_autop <- opq(bbox) %>%
add_osm_feature(key = "highway", value = c("motorway","trunk")) %>%
osmdata_sf()
vias_autop = vias_autop$osm_lines
rio = opq(bbox) %>%
add_osm_feature(key = "waterway", value = "river") %>%
osmdata_sf()
rio = rio$osm_lines
calles = rbind(vias_prim[,c("geometry")], vias_sec[,c("geometry")])
barrios = barrios[!st_is_empty(barrios$geom),,drop=FALSE]
barrios = subset(barrios, is.na(barrios$categoria)==F)
library(tmap)
tmap_mode("plot")
pal = c("#2B83BA","#ABDDA4","#F1EF78","#FDAE61","#E53E3E","#99A3A4")
mapa_pred <- tm_basemap(leaflet::providers$OpenStreetMap.Mapnik) +
tm_shape(barrios) +
tm_fill(col = c("categoria"), palette = pal) +
tm_borders(col = "#85929E", lwd = 0.1, alpha = 0.2) +
tm_layout(main.title= "Figura 1 - Clasificaci?n de barrios seg?n nivel socioecon?mico.",  main.title.position = c('right', 'center'), main.title.size = 1) +
tm_legend(position = c("right", "center"),
bg.color = "white",
bg.alpha=1, text.size = 0.8,
width = 1, title.size = 1.2, outside = TRUE) +
tm_shape(vias_autop) + tm_lines(col = "black",lwd = 3)+
tm_shape(calles) + tm_lines(col = "black",lwd = 1)+
tm_shape(rio) + tm_lines(col = "#3498DB",lwd = 2) +
tm_compass(type = "4star", position=c("right", "top")) + tm_scale_bar()
mapa_pred
tmap_save(mapa_pred, filename = "mapa_barrios.png")
mapa_pred <- tm_basemap(leaflet::providers$OpenStreetMap.Mapnik) +
tm_shape(barrios) +
tm_fill(col = c("categoria"), palette = pal) +
tm_borders(col = "#85929E", lwd = 0.1, alpha = 0.2) +
tm_layout(main.title= "Figura 1 - Clasificación de barrios según nivel socioeconómico.",  main.title.position = c('left', 'center'), main.title.size = 1) +
tm_legend(position = c("right", "center"),
bg.color = "white",
bg.alpha=1, text.size = 0.8,
width = 1, title.size = 1.2, outside = TRUE) +
tm_shape(vias_autop) + tm_lines(col = "black",lwd = 3)+
tm_shape(calles) + tm_lines(col = "black",lwd = 1)+
tm_shape(rio) + tm_lines(col = "#3498DB",lwd = 2) +
tm_compass(type = "4star", position=c("right", "top")) + tm_scale_bar()
mapa_pred
mapa_pred <- tm_basemap(leaflet::providers$OpenStreetMap.Mapnik) +
tm_shape(barrios) +
tm_fill(col = c("categoria"), palette = pal) +
tm_borders(col = "#85929E", lwd = 0.1, alpha = 0.2) +
tm_layout(main.title= "Figura 1 - Clasificación de barrios según nivel socioeconómico.",  main.title.position = c('left', 'center'), main.title.size = 1) +
tm_legend(position = c("right", "center"),
bg.color = "white",
bg.alpha=1, text.size = 0.7,
width = 1, title.size = 1.2, outside = TRUE) +
tm_shape(vias_autop) + tm_lines(col = "black",lwd = 3)+
tm_shape(calles) + tm_lines(col = "black",lwd = 1)+
tm_shape(rio) + tm_lines(col = "#3498DB",lwd = 2) +
tm_compass(type = "4star", position=c("right", "top")) + tm_scale_bar()
mapa_pred
mapa_pred <- tm_basemap(leaflet::providers$OpenStreetMap.Mapnik) +
tm_shape(barrios) +
tm_fill(col = c("categoria"), palette = pal) +
tm_borders(col = "#85929E", lwd = 0.1, alpha = 0.2) +
tm_layout(main.title= "Figura 1 - Clasificación de barrios según nivel socioeconómico.",  main.title.position = c('left', 'center'), main.title.size = 1) +
tm_legend(position = c("right", "center"),
bg.color = "white",
bg.alpha=1, text.size = 0.7,
width = 1, title.size = 1.1, outside = TRUE) +
tm_shape(vias_autop) + tm_lines(col = "black",lwd = 3)+
tm_shape(calles) + tm_lines(col = "black",lwd = 1)+
tm_shape(rio) + tm_lines(col = "#3498DB",lwd = 2) +
tm_compass(type = "4star", position=c("right", "top")) + tm_scale_bar()
mapa_pred
mapa_pred <- tm_basemap(leaflet::providers$OpenStreetMap.Mapnik) +
tm_shape(barrios) +
tm_fill(col = c("categoria"), palette = pal) +
tm_borders(col = "#85929E", lwd = 0.1, alpha = 0.2) +
tm_layout(main.title= "Figura 1 - Clasificación de barrios según nivel socioeconómico.",  main.title.position = c('left', 'center'), main.title.size = 1,
fontfamily = "serif") +
tm_legend(position = c("right", "center"),
bg.color = "white",
bg.alpha=1, text.size = 0.7,
width = 1, title.size = 1.1, outside = TRUE) +
tm_shape(vias_autop) + tm_lines(col = "black",lwd = 3)+
tm_shape(calles) + tm_lines(col = "black",lwd = 1)+
tm_shape(rio) + tm_lines(col = "#3498DB",lwd = 2) +
tm_compass(type = "4star", position=c("right", "top")) + tm_scale_bar()
mapa_pred
tmap_save(mapa_pred, filename = "mapa_barrios.png")
